<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
 	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:security="http://www.springframework.org/schema/security"
 	xsi:schemaLocation="http://www.springframework.org/schema/beans
 		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
 		http://www.springframework.org/schema/security
 		http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <!-- This is where we configure Spring Security -->
    <security:http auto-config="true" use-expressions="true" access-denied-page="/auth/denied.html">

        <security:intercept-url pattern="/auth/login.html" access="permitAll"/>
        <security:intercept-url pattern="/anonymous/newuser.html" access="permitAll"/>
        <security:intercept-url pattern="/administrator/admin.html" access="hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/main/common.html" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/vehicle/addvehicle.html" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/reservation/addreservation.html" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/reservation/validation.html" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/reservation/receipt.html" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/vehiclemanage/managevehicles.html" access="hasRole('ROLE_USER')" />
        <security:intercept-url pattern="/reservationmanage/managereservations.html" access="hasRole('ROLE_USER')" />
        <security:intercept-url pattern="/language/languagepage.html" access="hasRole('ROLE_USER')" />

        <security:form-login
            login-page="/auth/login.html"
            authentication-failure-url="/auth/login.html?error=true"
            default-target-url="/main/common.html"/>

        <security:logout
            invalidate-session="true"
            logout-success-url="/auth/login.html"
            logout-url="/auth/logout.html"/>

    </security:http>

    <!--  Declare an authentication-manager to use a custom userDetailsService -->
    <security:authentication-manager alias="authenticationManager" >
        <security:authentication-provider user-service-ref="customUserDetailsService">
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <!--  Use an MD5 encoder since the user's passwords are stored as MD5 in the database -->
    <bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"/>

    <!-- A custom service where Spring will retrieve users and their corresponding access levels -->
    <bean id="customUserDetailsService" class="com.stgutah.service.CustomUserDetailsService"/>

</beans>